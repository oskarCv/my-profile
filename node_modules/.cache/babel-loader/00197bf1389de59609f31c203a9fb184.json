{"ast":null,"code":"var _jsxFileName = \"/Users/oskarcv/Documents/ReactWeb/oskarcv-web/src/components/Context.js\";\nimport React, { Component } from 'react';\nimport { MyInfo } from '../Data';\nconst InfoContext = React.createContext();\n/**\n * context provide us with some things like:\n * -> provider --- provides data\n * -> consumer --- consumes data\n */\n\nclass InfoProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: MyInfo\n    };\n  }\n\n  render() {\n    return React.createElement(InfoContext.Provider, {\n      value: {\n        info: this.state.info\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst InfoConsumer = InfoContext.Consumer;\nexport { InfoProvider, InfoConsumer };","map":{"version":3,"sources":["/Users/oskarcv/Documents/ReactWeb/oskarcv-web/src/components/Context.js"],"names":["React","Component","MyInfo","InfoContext","createContext","InfoProvider","state","info","render","props","children","InfoConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,SAArB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEA;;;;;;AAMA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GAC3B;AACFC,MAAAA,IAAI,EAAGL;AADL,KAD2B;AAAA;;AAIjCM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AACzBD,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKE,KAAL,CAAWC,QAHhB,CADJ;AAOH;;AAZgC;;AAcrC,MAAMC,YAAY,GAAGR,WAAW,CAACS,QAAjC;AAEA,SAAQP,YAAR,EAAsBM,YAAtB","sourcesContent":["import React, { Component } from 'react';\nimport {MyInfo} from '../Data';\n\nconst InfoContext = React.createContext();\n\n/**\n * context provide us with some things like:\n * -> provider --- provides data\n * -> consumer --- consumes data\n */\n\nclass InfoProvider extends Component {\n    state={\n        info : MyInfo\n    }\n    render() {\n        return (\n            <InfoContext.Provider value={{\n                info: this.state.info\n            }}>\n                {this.props.children}\n            </InfoContext.Provider>\n        );\n    }\n}\nconst InfoConsumer = InfoContext.Consumer;\n\nexport {InfoProvider, InfoConsumer}"]},"metadata":{},"sourceType":"module"}